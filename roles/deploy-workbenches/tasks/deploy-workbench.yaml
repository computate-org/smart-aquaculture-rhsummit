---
- name: "Create the site namespace {{ SITE_NAMESPACE }}"
  kubernetes.core.k8s:
    state: present
    kind: Namespace
    api_version: v1
    name: "{{ SITE_NAMESPACE }}"
    validate_certs: false
  when: WORKBENCH_ADMIN
- name: "Create a namespace {{ WORKBENCH_NAMESPACE }}"
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'namespace.yaml') }}"
    validate_certs: false
- name: "Install {{ 'keycloak-client-' + (AUTH_CLIENT | lower ) }} secret in namespace {{ WORKBENCH_NAMESPACE }}"
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'auth-client-secret.yaml') }}"
    validate_certs: false
- name: "Create the deploy-workbench service account for workbench {{ WORKBENCH_NAME }} in namespace {{ WORKBENCH_NAMESPACE }}"
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'serviceaccount-deploy-workbench.yaml') }}"
    validate_certs: false
- name: "Create namespace role bindings in namespace {{ WORKBENCH_NAMESPACE }}"
  tags:
    - deploy-rolebindings
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'rolebindings.yaml') }}"
    validate_certs: false
- name: "Create namespace role workbench-admin bindings in namespace {{ WORKBENCH_NAMESPACE }}"
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'workbench-admin-rolebindings.yaml') }}"
    validate_certs: false
  when: WORKBENCH_ADMIN
- name: "Create a font awesome secret in namespace {{ WORKBENCH_NAMESPACE }}"
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'font-awesome-secret.yaml') }}"
    validate_certs: false
  ignore_errors: true
- name: "Create a postgres secret in namespace {{ WORKBENCH_NAMESPACE }}"
  tags:
    - create-database
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'postgres-secret.yaml') }}"
    validate_certs: false
  when: (query('kubernetes.core.k8s', kind='Secret', resource_name=('postgres-pguser-' + SITE_SHORT_NAME), namespace=WORKBENCH_NAMESPACE)[0].data['password'] | default('')) == ''
- name: "Create the deploy-workbench Ansible vars for workbench {{ WORKBENCH_NAME }} in namespace {{ WORKBENCH_NAMESPACE }}"
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'configmap-deploy-workbench-defaults.yaml') }}"
    validate_certs: false
- name: "Create the deploy-workbench Ansible tasks for workbench {{ WORKBENCH_NAME }} in namespace {{ WORKBENCH_NAMESPACE }}"
  kubernetes.core.k8s:
    state: present
    name: deploy-workbench-tasks
    namespace: "{{ WORKBENCH_NAMESPACE }}"
    definition: |-
      {{ lookup('file', 'configmap-deploy-workbench-tasks.yaml') }}
    validate_certs: false
- name: "Create the deploy-workbench Ansible playbook for workbench {{ WORKBENCH_NAME }} in namespace {{ WORKBENCH_NAMESPACE }}"
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'configmap-deploy-workbench-playbook.yaml') }}"
    validate_certs: false
- name: "Create the deploy-workbench Ansible templates for workbench {{ WORKBENCH_NAME }} in namespace {{ WORKBENCH_NAMESPACE }}"
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'configmap-deploy-workbench-templates.yaml') }}"
    validate_certs: false
- name: "Remove the deploy-workbench Job if it exists for workbench {{ WORKBENCH_NAME }} in namespace {{ WORKBENCH_NAMESPACE }}"
  kubernetes.core.k8s:
    state: absent
    namespace: "{{ WORKBENCH_NAMESPACE }}"
    api_version: batch/v1
    kind: Job
    name: deploy-workbench
    validate_certs: false
- name: "Create the deploy-workbench Job for workbench {{ WORKBENCH_NAME }} in namespace {{ WORKBENCH_NAMESPACE }}"
  kubernetes.core.k8s:
    state: present
    definition: "{{ lookup('template', 'job-deploy-workbench.yaml') }}"
    validate_certs: false
- name: "Create solr computate collection in namespace {{ WORKBENCH_NAMESPACE }}"
  kubernetes.core.k8s_exec:
    namespace: "{{ SOLR_NAMESPACE }}"
    pod: solr-0
    command: >-
      bash -c '
      env SOLR_AUTH_TYPE=basic SOLR_AUTHENTICATION_OPTS="-Dbasicauth=$SOLR_ADMIN_USERNAME:$SOLR_ADMIN_PASSWORD" /opt/bitnami/solr/bin/solr create_collection --solr-url http://localhost:8983 -c {{ SOLR_COLLECTION_COMPUTATE }} -n computate
      '
  ignore_errors: true
- name: "Create solr site collection in namespace {{ WORKBENCH_NAMESPACE }}"
  kubernetes.core.k8s_exec:
    namespace: "{{ SOLR_NAMESPACE }}"
    pod: solr-0
    command: >-
      bash -c '
      env SOLR_AUTH_TYPE=basic SOLR_AUTHENTICATION_OPTS="-Dbasicauth=$SOLR_ADMIN_USERNAME:$SOLR_ADMIN_PASSWORD" /opt/bitnami/solr/bin/solr create_collection --solr-url http://localhost:8983 -c {{ SOLR_COLLECTION }} -n computate
      '
  ignore_errors: true
